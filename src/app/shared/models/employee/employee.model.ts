import { FilterBaseModel } from '../filter/filter.model';
import { BankAccountModel } from './bank-account.model';

export class SearchEmployeeModel {
  currentPage: number;
  pageSize: number;
  sortColumn: string;
  sortDirection: string;
  employeeCode: string;
  employeeName: string;
  employeeType: string;
  cmnd: string;
  beginDate?: string;
  endDate?: string;
  typeOff?: string;
  contractTypeId: number;
  departmentIds?: number[];
  groupIds: number[];
  salaryRateId: number;
  salaryRateIds: number[];
  oldMin:string;
  oldMax:string;
  employeeTypeIds?: number;
  contractType: number;
  all: boolean;
  responsibilityId: number;
  gender: any;
}

export class EmployeeModel {
  FileImage: any;
  urlImage: string;
  employeeId: number;
  employeeCode: string;
  employeeCodeTemp: string;
  employeeType: number;
  employeeName: string;
  firstName: string;
  lastName: string;
  gender: number;
  dateOfBirth: Date;
  placeOfBirth: string;
  placeOfBloodLine: string;
  nativeCountry: string;
  status: any;
  address1: string;
  address2: string;
  inCity: boolean;
  identityCardNo: string;
  identityCardNoOld: string;
  passport: string;
  issuerDate: Date;
  issuerDateOld: Date;
  issuerPlaceKey: string;
  issuerPlaceId: number;
  issuerPlace: string;
  phoneNo: string;
  marriage: number;
  spouseName: string;
  spouseDob: Date;
  yearOfBirthChild: string;
  numberOfChild: number;
  departmentId: number;
  departmentName: string;
  groupId: number;
  groupName: string;
  religion: string;
  nation: string;
  nationality: string;
  cultureLevel: string;
  academyId: number;
  academyName: string;
  academyCode: string;
  imageId: number;
  createdDate: Date;
  createdBy: string;
  updatedDate: Date;
  updatedBy: string;
  contracts: ContractModel[];
  bankAccounts: BankAccountModel[];
  trainingProcessListModels: TrainingProcessListModels[];
  employeeWorkingProcessModels: EmployeeWorkingProcessModels[];
  seNum: number;
  issuerPlaceName: string;
  department_Group: string;
  departmentCode: string;
  fullName?: string;
  technicianSkill: string;
  technicianRate: string;
  foreigner: boolean;
};

export class EmployeeParttimeModel {
  contractTypeId: number;
  presenter: string;
  academyCode: string;
  academyId: number;
  address1: string;
  address2: string;
  contractNumber: string;
  contractType: number;
  createdBy: number;
  createdDate: Date
  cultureLevel: string;
  dateJoined: any;
  dateOfBirth: Date;
  dateOff: number;
  departmentCode: string;
  departmentId: number;
  description: string;
  employeeCodeTemp: string;
  employeeCode: string;
  employeeId: number;
  endDate: Date;
  firstName: string;
  gender: number;
  groupId: number;
  identityCardNo: string;
  inCity: boolean;
  issuerDate: Date
  issuerPlace: string;
  lastName: string;
  marriage: number;
  nation: string;
  nationality: string;
  numberOfChild: number;
  phoneNo: number;
  placeOfBirth: string;
  possitionName: string;
  religion: string;
  signedDate: Date
  spouseName: string;
  status: true;
  updatedBy: string;
  updatedDate: Date;
  urlImage: string;
  // contractCode: string;
  spouseDob: string;
  nativeCountry: string;
  FileImage: any;
  contractRange: number;
  academyName: string;
  clothes: boolean;
  technicianSkill: string;
  technicianRate: string;
};

export class EmployeeWorkingProcessModels {
  employeeId: number;
  workCountDate: Date;
  dateCreated: Date;
  contractNumber: string;
  groupId: number;
  groupCode: string;
  possitionName: string;
  salaryRateCode: string;
  stype: string;
  seniorityCoefficient: number;
  responsibilityCode: string;
  upSalaryDate : any;
  workYearDateNext: any;
};


export class TrainingProcessListModels {
  id: number;
  trainingId: number;
  trainingCode: string;
  contractNumber: string;
  dateCreated: Date;
  description: string;
  trainingTime: number;
  createdDate: Date;
  createdBy: string;
  updatedDate: Date;
  updatedBy: string
};

export class ContractModel {
  contractId: number;
  employeeId: number;
  outsourced: boolean;
  contractCode: string;
  contractTypeId: number;
  contractTypeName: string;
  contractCodeOld: string;
  possitionId: number;
  possitionName: string;
  possitionKey: string;
  possitionCode: string;
  possition: string;
  dateJoined: any;
  insurranceSocialBookNo: string;
  insurranceMedicalBookNo : string;
  firstType: string;
  taxCodeDate: Date;
  signedDate: any;
  signedLastDate: Date;
  endDate: Date;
  signedNo: number;
  contractRangeId: number;
  contractRange: number;
  responsibilityId: number;
  responsibilityKey: string;
  responsibilityName: string;
  responsibilityCode: string;
  salaryRateId: number;
  salaryRateCode: string;
  workedCountNo: number;
  workedCountDate: Date;
  upSalaryDate: Date;
  workedYearDateNext: Date;
  presenter: string;
  changedPossionDate: Date;
  htxDate: Date;
  active: boolean;
  nvqsdate: Date;
  returnWorkingDate: Date;
  taxCode: string;
  insurranceBookNo: string;
  insurranceBookDate: Date;
  description: string;
  createdDate: Date;
  createdBy: string;
  updatedDate: Date;
  updatedBy: string;
  status: boolean;
  jobCode: string;
  departmentName: string;
  departmentId: number;
  isDefault: boolean;
  stype?: any;
  seNum: number;
  dateOff: number;
  insurranceBookOld: boolean;
}

export class InactivityModel extends FilterBaseModel {
  textSearch?: string;
  tLYear : any;
}

export class employeeLabormanagementbook {
  fullName: string;
      gender: string;
      dateOfBirth: string;
      nationality: string;
      address: string;
      identiyCardNo: string;
      technicianSkill: string;
      technicianRate: string;
      possitionName: string;
      contractType: string;
      startDate: string;
      bhxh: string;
      bhyt: string;
      bhtn: string;
      salaryBase: number;
      upgradeSalary: string ;
      numberOfLeaveYear: number;
      leaveReason: string ;
      numberOfAdvanceTime: number;
      receiptBhxh: string ;
      receiptBhyt: string ;
      education: string ;
      discipline: string ;
      accident: string ;
      timeOff: string;
      timeOffReason: string;
}
